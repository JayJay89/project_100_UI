/////////////////////////////////////////////
////// Dropdown Menus
////// 01 Base
////// 02 Disabled State
////// 03 Dropdown Menu Open State
////// 04 Menu Positioning
////// 05 Component Alignment
/////////////////////////////////////////////

/**=====================================**/
/* 01 Base */
/**=====================================**/
// The dropdown wrapper (div)
.dropup,
.dropdown {
  position: relative;
}

// Prevent the focus on the dropdown toggle when closing dropdowns
.dropdown-toggle:focus {
  outline: 0;
}

// The dropdown menu (ul)
.dropdown-menu {
  z-index: $zindex-navbar-dropdown;
  /*display: none;*/ // none by default, but block on "open" of the menu, is disabled as pikto use onhover to show the dropdown instead of onclick
  float: left;
  width: 160px;
  margin: 2px 0 0; // override default ul
  list-style: none;
  font-size: $font-size-base;
  left: 0px;
  top: 30px;
  position: absolute;
  padding: 20px 0px;

  // Ensures proper alignment if parent has it changed (e.g., modal footer)
  text-align: left; 
  background-color: $dark-purple-grey-03;
  
  // IE8 fallback
  border: 0px solid $grey-alternate-6; 
  border: 0px solid $grey-alternate-6;
  @include border-radius() 
  background-clip: padding-box;

  
  // Dividers (basically an hr) within the dropdown
  .divider {
    @include nav-divider($light-purple-grey-04);
  }

  // Links within the dropdown menu
  > li {

    > a,
    > button {
      padding: 5px 10px;
      display: block;
      font-weight: normal;
      line-height: $line-height-base;

      /*This serves to prevent links from randomly breaking onto new lines but prevents longer menu titles */
      // white-space: nowrap; 
    }
  }
}

.dropdown-menu-left {
  left: 0%;
}

.dropdown-menu-right {
  left: initial;
  right: 0%;
}

// Submenu
.dropdown-submenu {
  position: relative;

  &:hover {
    > .dropdown-menu {
      display: block;
    }
  }
}

.dropdown-submenu-left {
  top: -20px;
  left: calc(-100% - 5px);
}

.dropdown-submenu-right {
  left: initial;
  top: -20px;
  right: calc(-100% - 5px);
}

// Hover/Focus state
.dropdown-menu > li > a {

  &:hover {
    background-color: $dark-purple-grey-01;
  }
}

// Active state
.dropdown-menu > .active > a {

  &,
  &:hover,
  &:focus {
    color: $white;
    text-decoration: none;
    outline: 0;
    background-color: $dark-purple-grey-01;
  }
}

/**=====================================**/
/* 03 Dropdown Menu Open State */
/**=====================================**/
  // Open state for the dropdown (from bootstrap)
  .open { 
    // Show the menu
    > .dropdown-menu {
      display: block;
    }

    // Remove the outline when :focus is triggered
    > a {
      outline: 0;
    }
  }

// Hide/show and animation of dropdown menus and submenus.
// The transition and/or delay durations are needed so that a menu won't appear or disappear *immediately* when the user enters or leaves the hover element.
// This prevents the menu from popping up unwanted when the user is moving their mouse *over* the element to try to reach something else.
// It also prevents the menu from closing prematurely when the user moves their mouse over a gap, or tries to reach a sub-menu with a diagonal motion.
// Note: If we want two menus to never appear at once, then we should ensure that the display delay = hide delay + hide duration.
// But we need a longer delay before opening the main menu.  Otherwise it is easy to accidentally open the menu (and click it!) when aiming for something clickable at the top of the sidebar!
// (Designers/developers with high quality hardware might not notice this so easily!)
// Still, even with a large delay, mistakes are still possible (for users with slow hands).  Therefore we might want to make this a click-to-open menu, and only perform open-on-hover for submenus.  (I saw more opponents than proponents of hover-to-dropdown menus on UX.stackexchange.)
// Of course, another way to combat this is to move things away from the top of the sidebar!

.dropdown > .dropdown-menu,
.dropdown-submenu > .dropdown-menu {
  visibility: hidden;
  @include opacity(0);
  @include transition (all 0.1s linear 0.1s);
}

.dropdown:hover > .dropdown-menu,
.dropdown-submenu:hover > .dropdown-menu,
.dropdown.hover > .dropdown-menu,
.dropdown-submenu.hover > .dropdown-menu {
  visibility: visible;
  @include opacity(1);
  @include transition (all 0.1s linear 0.2s);
}