/////////////////////////////////////////////
////// Forms
////// 01 Normalize Non-Controls
////// 02 Normalize Form Controls
////// 03 Common Form Controls
////// 04 Search inputs in iOS
////// 05 Form Groups
////// 06 Checkboxes and Radios
////// 07 Static Form Control Text
////// 08 Form Control Sizing
////// 09 Form control Feedback States
////// 10 Help Text
////// 11 Inline Forms
////// 12 Horizontal Forms
////// 13 Pikto Add-on Customize Form
//////////// 13a Pikto Style Dropdown(outline only)
//////////// 13b Pure CSS Dropdown by Using Checkbox
//////////// 13c Pikto Checkbox
//////////// 13d Pikto Radio
//////////// 13e Search Bar
//////////// 13f Inline Search Bar
//////////// 13g Autocomplete
//////////// 13h Pikto Select
////// 14 Switch on/off
////// 15 Custom Select
////// 16 Input with inline icon
////// 17 Slider
/////////////////////////////////////////////

/**=====================================**/
/* 01 Normalize Non-Controls */
/**=====================================**/
// Restyle and baseline non-control form elements.

fieldset {
  padding: 0;
  margin: 0;
  border: 0;
  // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
  // so we reset that to ensure it behaves more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359.
  min-width: 0;
}

legend {
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: $line-height-computed;
  font-size: ($font-size-base * 1.5);
  line-height: inherit;
  color: $text-color;
  border: 0;
  border-bottom: 1px solid #e5e5e5;
}

label {
  display: inline-block;
  // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
  max-width: 100%; 
  margin-bottom: 5px;
  font-weight: normal;
}

/**=====================================**/
/* 02 Normalize Form Controls */
/**=====================================**/
// While most of our form styles require extra classes, some basic normalization
// is required to ensure optimum display with or without those classes to better
// address browser inconsistencies.



// Override content-box in Normalize (* isn't specific enough)
input[type="search"] {
  @include box-sizing(border-box);
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  margin-top: 1px \9; // IE8-9
  line-height: normal;
}
textarea {
  padding: 10px;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

input:focus {
  outline: none;
}

// Focus for file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  outline: none;
}

// Adjust output element
output {
  display: block;
  padding-top: ($padding-base-vertical + 1);
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $text-color;
}

/**=====================================**/
/* 03 Common Form Controls */
/**=====================================**/
// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]

.form-control {
  border: 1px solid $grey-dark;
  font-size: $font-size-base;
  line-height: normal;
  color: $dark-purple-grey-03;
  background-color: $white;
  padding: 7px 12px;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  width: 100%;
  @include border-radius;
  @include box-shadow(inset 0 0 0 1px transparent);
  @include transition(all 0.2s ease);
  
  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus;

  // Placeholder
  @include placeholder;

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    border: 0;
    background-color: transparent;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: $grey;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }
  // [converter] extracted textarea& to textarea.form-control

  &:focus {
    border: 1px solid $teal;
    outline: none;
    @include box-shadow(inset 0 0 0 1px $teal);
  }

  .input-has-error & {
    border: 1px solid $brand-danger;

    &:focus {
      border: 1px solid $brand-danger;
      @include box-shadow(inset 0 0 0 1px $brand-danger);
      outline: none;
    }

    &:focus {
      @include box-shadow(inset 0 0 0 1px $brand-danger);
    }

    .alert-danger{
      margin-top: 10px;
    }
  }
}

//Error Message
.input-has-error {
  div:first-child,
  input:first-child {
    margin: 0 0 10px;
  }
}

// Reset height for `textarea`s
textarea.form-control {
  height: auto;
}

/**=====================================**/
/* 04 Search inputs in iOS */
/**=====================================**/
// This overrides the extra rounded corners on search inputs in iOS so that our
// `.form-control` class can properly style them. Note that this cannot simply
// be added to `.form-control` as it's not specific enough. For details, see
// https://github.com/twbs/bootstrap/issues/11586.

input[type="search"] {
  -webkit-appearance: none;
}

// Special styles for iOS temporal inputs
//
// In Mobile Safari, setting `display: block` on temporal inputs causes the
// text within the input to become vertically misaligned. As a workaround, we
// set a pixel line-height that matches the given height of the input, but only
// for Safari. See https://bugs.webkit.org/show_bug.cgi?id=139848
//
// Note that as of 8.3, iOS doesn't support `datetime` or `week`.

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input[type="date"],
  input[type="time"],
  input[type="datetime-local"],
  input[type="month"] {

    &.form-control {
      line-height: $input-height-base;
    }

    &.input-sm,
    .input-group-sm & {
      line-height: $input-height-small;
    }

    &.input-lg,
    .input-group-lg & {
      line-height: $input-height-large;
    }
  }
}

/**=====================================**/
/* 05 Form Groups */
/**=====================================**/
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.form-group {
  margin-bottom: 15px;
}

/**=====================================**/
/* 06 Checkboxes and Radios */
/**=====================================**/
// Apply same disabled cursor tweak as for inputs
// Some special care is needed because <label>s don't inherit their parent's `cursor`.
//
// Note: Neither radios nor checkboxes can be readonly.
input[type="radio"],
input[type="checkbox"] {

  &[disabled],
  &.disabled,
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }
}

/**=====================================**/
/* 09 Form control Feedback States */
/**=====================================**/
// Apply contextual and semantic states to individual form controls.

// Feedback states
.has-success {
  @include form-control-validation($text-color, $text-color, $brand-success);
}

.has-warning {
  @include form-control-validation($text-color, $text-color, $brand-warning);
}

.input-has-error {
  @include form-control-validation($text-color, $text-color, $brand-danger);
}

/**=====================================**/
/* 11 Inline Forms */
/**=====================================**/
// Make forms appear inline(-block) by adding the `.form-inline` class. Inline
// forms begin stacked on extra small (mobile) devices and then go inline when
// viewports reach <768px.
//
// Requires wrapping inputs and labels with `.form-group` for proper display of
// default HTML form controls and our custom form controls (e.g., input groups).
//
// Heads up! This is mixin-ed into `.navbar-form` in navbars.less.

// [converter] extracted from `.form-inline` for libsass compatibility

@mixin form-inline {

  // Kick in the inline
  @media (min-width: $screen-sm-min) {
    // Inline-block all the things for "inline"
    .form-group {
      display: inline-block;
      margin-bottom: 0;
      vertical-align: middle;
    }

    // In navbar-form, allow folks to *not* use `.form-group`
    .form-control {
      display: inline-block;
      width: auto; // Prevent labels from stacking above inputs in `.form-group`
      vertical-align: middle;
    }

    .input-group {
      display: inline-table;
      vertical-align: middle;

      .input-group-btn,
      .form-control {
        width: auto;
      }
    }

    // Input groups need that 100% width though
    .input-group > .form-control {
      width: 100%;
    }

    .control-label {
      margin-bottom: 0;
      vertical-align: middle;
    }

    // Remove default margin on radios/checkboxes that were used for stacking, and
    // then undo the floating of radios and checkboxes to match.
    .radio,
    .checkbox {
      display: inline-block;
      margin-top: 0;
      margin-bottom: 0;
      vertical-align: middle;

      label {
        padding-left: 0;
      }
    }

    .radio input[type="radio"],
    .checkbox input[type="checkbox"] {
      position: relative;
      margin-left: 0;
    }

    // Re-override the feedback icon.
    .has-feedback .form-control-feedback {
      top: 0;
    }
  }
}

// [converter] extracted as `@mixin form-inline` for libsass compatibility
.form-inline {
  @include form-inline;
}

/**=====================================**/
/* 13 Pikto Add-on Customize Form */
/**=====================================**/
/* 13a Pikto Style Dropdown(outline only) */
/**=====================================**/
.pikto-dropdown {

  .form-control {
    border: 1px solid #a8c0c5;
    text-indent: 0.01px;
    text-overflow: "";
    -webkit-appearance: none;  /*Removes default chrome and safari style*/
    -moz-appearance: none;
    padding: 1em;

    option {
      background: $white;
    }

    &:focus {
      border: 2px solid #a8c0c5;
      @include box-shadow(none);
      outline:0 none!important;
    }
  }

  select {

    &:focus {
      outline:0 none!important;
    }
  }
}

/**=====================================**/
/* 13c Pikto Checkbox */
/**=====================================**/

.pikto-label {
  cursor: pointer;
  > input {
    display: none;
  }
}

/* Checkbox */
.pikto-checkbox {
  display: inline-block;
  vertical-align: middle;
  @include size(15px);
  position: relative;
  margin-right: 5px; /* same right margin as pikto-radio for radio button */

  &:after {
    @include opacity(0);
    @include rotate(-45);
    @include size(9px, 5px);
    background: transparent;
    content: '';
    left: 2px;
    position: absolute;
    top: 3px;
    /*The border-arrangement matters*/
    border: 2px solid $dark-purple-grey-03;
    border-top: none;
    border-right: none;
  }
}

.pikto-checkbox-thin {
  border: 1px solid $grey-darker;
  background-color: $white;
  @include border-radius;
  margin-top: -2px;
}

/*Checkbox - checked*/
.pikto-label {
  > input:checked {
    + .pikto-checkbox {
      border: 1px solid $teal;

      &:after {
        @include opacity(1);
        border: 2px solid $teal;
        border-top: none;
        border-right: none;
      }
    }
  }

  &:hover {
    > .pikto-checkbox:after {
      @include opacity(.3);
    }
  }

  &:active {
    > .pikto-checkbox,
    > input:checked + .pikto-checkbox{
      border: 2px solid $teal;
    }
  }
}

/**=====================================**/
/* 13d Pikto Checkbox */
/**=====================================**/

.pikto-radio-set {
  > .pikto-label {
    display: block;
  }
}
.pikto-radio {
  width: 14px;
  height: 14px;
  background-color: white;
  display: inline-block;
  border: 1px solid $grey-darker;
  @include border-radius("all", 50%);
  content: '';
  position: relative;
  vertical-align: middle;
  margin: 0px 5px 3px 0px;

  &:after {
    content:"";
    background-color: $grey-darker;
    display: block;
    height: 6px;
    width: 6px;
    position: absolute;
    top: 50%;
    right: 50%;
    @include translate(50%, -50%);
    @include border-radius("all", 50%);
    @include opacity(0);
  }
}
.pikto-label {
  > input:checked {
    + .pikto-radio {
      border: 1px solid $teal;

      &:after {
        @include opacity(1);
        background-color: $teal;
      }
    }
  }

  &:hover {
    > .pikto-radio:after {
      @include opacity(.3);
    }
  }

  &:active {
    > .pikto-radio,
    > input:checked + .pikto-radio{
      border: 2px solid $teal;
    }
  }
}

/**=====================================**/
/* 13e Search Bar */
/**=====================================**/
.search-container {
  width: 100%;
  position: relative;

  input[type="text"] {
    width: 100%;
  }
}

/**=====================================**/
/* 13f Inline Search Bar */
/**=====================================**/
.pikto-search-input {
  position: relative;
  padding: 0 0 5px;
  padding: 8px;

  > .icon-search-lightpurple {
    @include scale (.9);
    @include absolute(top 8px left 8px);
    display: block;
  }

  input {
    display: inline-block;
    margin-left: 32px;
    width: 90%;
    @include transition(all, .5s);
  }
}

/**=====================================**/
/* 13g Autocomplete */
/**=====================================**/
.autocomplete-suggestions {
  background-color: $white;
  @include border-radius("all", 4px);
  border: 1px solid $grey-dark;
  cursor: default;
  overflow: auto;
  color: $text-color;
  margin: 5px 0 0;
  width: 100%;
}
.autocomplete-suggestion {
  padding: 10px;
  white-space: nowrap;
  overflow: hidden;
  border-bottom: 1px solid $grey;

  strong {
    color: $teal;
  }
}
.autocomplete-selected {
  background-color: $grey-light;
}

/**=====================================**/
/* 13h Pikto Select */
/**=====================================**/
select {
  width: 100%;
  height: 35px;
  padding: 0px 12px;
  font-size: $font-size-base;
  border: 1px solid transparent;
  @include border-radius() 
  color: $black;
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: image-url('v4/b/arrow.png') 100% no-repeat;
  background-origin: content-box;

  &:focus {
    border: 1px solid $teal;
    outline: $teal;
  }

  &::-ms-expand {
    display: none;
  }

  &:-moz-focusring {
    color: transparent;  
    text-shadow: 0 0 0 $black;   
  }
}

.pikto-select-small {
  height: 32px;
}

.pikto-select-big {
  height: 40px;
}

.pikto-select-dark {
  background-color: $light-purple-grey-07;
}

.pikto-select-light {
  background-color: $grey-dark;
}
/**=====================================**/
/* 14 Switch on/off */
/**=====================================**/
.onoffswitch {
  width: 56px;
  display: block;
  position: relative;

  .onoffswitch-inner {
    &:before {
      padding: 0 20px 0 0;
      padding-left: 10px !important;
    }

    &:after {
      padding-left: 4px !important;
    }
  }
}

.onoffswitch-checkbox {
  display: none;
}

.onoffswitch-label {
  display: block;
  overflow: hidden;
  cursor: pointer;
  @include border-radius("all", 12px);
}

.onoffswitch-inner {
  width: 200%;
  margin-left: -100%;
  @include transition(margin 0.3s ease-in 0s);

  &:before, &:after {
    @include size(50%, 26px);
    float: left;
    padding: 0;
    font-size: 12px;
    color: $white;
    font-weight: bold;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
  }

  &:before {
    content: "";
    padding: 0 10px 0;
    background-color: $teal;
    color: #f1f2f2;
    @include border-radius;
  }

  &:after {
    content: "";
    padding-right: 8px;
    background-color: $grey-dark;
    color: #f1f2f2;
    text-align: right;
    @include border-radius;
  }
}

.onoffswitch-switch {
  background: #f1f2f2;
  position: absolute;
  top: 2px;
  right: 32px;
  @include size(22px, 22px);
  @include border-radius("all", 50%);
  @include transition(all 0.3s ease-in 0s);
  @include onoff-shadow-1;
}

.onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-inner {
  margin-left: 0;
}

.onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-switch {
  right: 2px;
  @include onoff-shadow-2;
}


/**=====================================**/
/* 16 Input with inline icon */
/**=====================================**/
.input-inline-icon {
  position: relative;
  cursor: pointer;

  > i, img {
    position: absolute;
    z-index: 9;
    top: 50%;
    transform: translateY(-50%);
  }

  &.left-icon {
    > i, img {
      left: 10px;
    }

    input {
      padding-left: 40px;
    }
  }
  
  &.right-icon {

    > i, img {
      right: 10px;
    }

    input {
      padding-right: 40px;
    }
  }
}

.input-with-btn {
  @include flexbox;

  &.right-btn {
    > .pikto-btn {
      margin-left: -2px;
      @include border-radius-removal("left");
    }
  }

  &.left-btn {
    > .pikto-btn {
      margin-right: -2px;
      @include border-radius-removal("right");
    }
  }

  .pikto-btn {
    position: relative;
  }
}

.input-custom-size {
  width: 200px;
}

/**=====================================**/
/* 17 Slider */
/**=====================================**/
.pikto-slider-container {
  padding: 10px 0px;
}

$slider-bg-color: transparent;

$track-height: 3px;
$track-color: transparent;

$focused-track-color: $track-color;
$lower-track-color: $teal;
$upper-track-color: $grey-darker;

$thumb-size: 12px;
$thumb-color: #019B97;
$thumb-border-width: 2px;

@mixin slider-border-radius {
  border-radius: 25px;
}
@mixin slider-track-border {
  border: 0px solid red;
}
@mixin track-base {
  width: 100%;
  height: $track-height;
  cursor: pointer;
  animate: 0.2s;
}
@mixin thumb-base {
  border: 0px solid #000000;
  height: $thumb-size;
  width: $thumb-size;
  border-radius: 50%;
  background: $thumb-color;
  border: $thumb-border-width solid #C2C2C2;
  cursor: pointer;
  @include box-shadow(1px 0px 1px 0px rgba(black, 0.5));
}
input[type=range] {
  -webkit-appearance: none;
  margin: 0px;
  padding: 0px;
  width: 100%;
  border: 0px;
  background-color: $slider-bg-color;
  /*Not sure how to calculate this to cater all browsers*/
  /*At lower values, the track shrunk in IE as well*/
  height: $track-height;

  &::-webkit-slider-runnable-track {
    @include track-base;
    @include slider-border-radius;
    @include slider-track-border;
    background: $track-color;
  }

  &::-webkit-slider-thumb {
    @include thumb-base;
    -webkit-appearance: none;
    margin-top: -($thumb-size / 2) + $track-height ;
    margin-top: -4px;
  }

  &::-moz-range-track {
    @include track-base;
    @include slider-border-radius;
    @include slider-track-border;
    background: $track-color;
  }

  &::-moz-range-thumb {
    @include thumb-base;
  }

  &::-ms-track {
    @include track-base;
    background: transparent;
    background-color: transparent;
    border-color: transparent;
    color: transparent;
    /*    IE produces a weird top and bottom spacing, hackish way reduce that space    */
    margin: -30px 0px;
  }

  &::-ms-fill-lower{
    @include slider-track-border;
    background: $lower-track-color;
  }

  &::-ms-fill-upper {
    @include slider-track-border;
    background: $upper-track-color;
  }

  &::-ms-thumb {
    @include thumb-base;
  }

  &::-moz-focus-outer {
    border: 0;
  }

  &:focus {
    outline: none;
    box-shadow: none;

    &::-webkit-slider-runnable-track {
      background: $focused-track-color;
    }

    &::-ms-fill-lower {
      background: $lower-track-color;
    }

    &::-ms-fill-upper {
      background: $upper-track-color;
    }
  }
}