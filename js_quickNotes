/*Lesson 1*/

/* Adding Classes*/
/*
  image_container.addEventListener('mouseenter', function(){
    /*Method - 1 Add a new class hover to it*/
    // tools.className += " hover";

    /*Method - 2 Decide what classes remains when we hovered */
    nav_bar.className = "bar nav-bar hover";

    /*Method - 3 Add a new class hover to it*/
    tools.classList.add("hover");
  });
*/


/* Event Delegation

  image_container_image.addEventListener('click', function(e){
    console.log(e.target);

    if (e.target.tagName.toLowerCase() === 'img') {
      //do something
    }

    if(e.tagName == 'A' && e.classList.contains("someBtn")){
      //do something
    }

    if ( e.target.className === 'my-button') {
      //do something
    }

    if(e.target && e.target.nodeName == "LI") {
      //do something
    }
  })
*/

/*Lesson 2*/
/*

  This won't work
  ======================================
  left_pointer.addEventListener('transitionend', function(){
    closeGallery();
  });
  left_pointer.removeEventListener('transitionend');
  ======================================

  To remove event listeners, This'll work
  ======================================
  left_pointer.addEventListener('transitionend', switchDisplay);
  left_pointer.removeEventListener('transitionend', switchDisplay);
  ======================================
*/

/*Lesson 3 */
/*
  Always remember to remove event listeners after they are not in used!!!

  OR 

  Search for how to prevent event handlers from firing multiple times
*/

/*Lesson 4*/
// https://developers.google.com/web/updates/2016/10/addeventlistener-once
/*
Instead of removing event listeners all the time, You can add a third parameter 
to  
  elem.addEventListener('transitionend', switchDisplay, {once: true});
*/

/*Animation Machine*/

var moveBy3 = function(target){
  let start = performance.now();
  var duration = 500;
  var distance = 300;

  requestAnimationFrame(animate);

  function animate(){
    let timePassed = performance.now() - start;
    let progress = timePassed / duration;

    if (progress > 1) {
      progress = 1;
    }

    moveLeft();
    console.log(progress);

    if (progress == 1) {
      cancelAnimationFrame(animate);
    } else {
      requestAnimationFrame(animate);
    }

    function moveLeft(){
      target.style.left = (distance * progress) + "px"; 
      console.log("timePassed " + timePassed);
      console.log("left " + target.style.left);
      console.log("progress " + progress);
    }
  }
}

/*Lesson 5*/
/*This won't work*/
var animate = function(moveProp){
  elem.style.moveProp = 100px;
}
/*Use Bracket Notation instead*/
var animate = function(moveProp){
  elem.style[moveprop] = 100px;
}

/*Lesson 6*/
/*How to quickly find the index of an object*/

function findIndex(node) {
  var parent = node.parentNode;
  var index = Array.prototype.indexOf.call(parent.children, node);
  return (index + 1);
}

/*Lesson 7*/
For this case I want to check if all the results are true, if only one of them is false, it'll return false

const validationResult = {
  name_valid: false,
  email_valid: false,
  tele_valid: true
}

/*
  If i run this, what happens is that upon finding the first true result, the loop will return a true and stops
  Hence, it doesn't check for other results. A `true false false` will still return a true;
*/

function checkResult(result) {
  for (var validity in result) {
    if (result[validity] === false ) {
      return false;
    } else {
      return true;
    }
  }
}

/*
  The fix is this, loop through all the results first.
  If the result is valid, do nothing, if false , return false
  if all the results are valid then return true
*/

function checkResult(result) {
  for (var validity in result) {
    if (result[validity] === false ) {
      return false;
    } 
  }
  return true;
}